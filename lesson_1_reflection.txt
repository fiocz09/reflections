How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    By viewing a diff between two versions, I can easily see what has changed,
    hence see the bug.

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    By having an access to the entire history of a file, I can see the bug
    quickly, therefore become more efficient in programming.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    Pros: only versions meaningful or I concern saved, find the wanted takes
          less time;
    Cons: auto-saver saves everything, I cannot miss any.

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    Cuz, Git deal with files which are inter-related, changing one might have an
    influence to another. While Google Docs deal with files which are more
    separated, multiple files in one commit would be unnecessarily.

How can you use the commands git log and git diff to view the history of files?

    git log: view the entire history of each commit, including id, description,
             etc.
    git diff: compare two commit versions with their ids, and see the diff

How might using version control make you more confident to make changes that
could break something?

    Once I've made commit, things can be restored, thus I would not be afraid
    of changing that could break things.

Now that you have your workspace set up, what do you want to try using Git for?

    Try some features. To be honest, I've not fully get the last 2 videos of
    setting up workspaces. Maybe I can get to know later.
